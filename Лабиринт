#создай игру "Лабиринт"!
from pygame import*#Импортируем файлы 
from random import randint
class GameSprite(sprite.Sprite):#создаем класс родитель
    def __init__(self, player_image, player_x, player_y, player_speed):#создаем будущие параметры 
        super().__init__()#передаем класс родитель
        self.image = transform.scale(image.load(player_image), (65, 65))#передаем картинку с размером
        self.speed = player_speed#будущая скорость игрока
        self.rect = self.image.get_rect()#
        self.rect.x = player_x#координаты
        self.rect.y = player_y#

    def reset(self):#
        window.blit(self.image, (self.rect.x, self.rect.y))#
class Player(GameSprite):#создаем класс игрок и помещаем в него кдласс родитель
    def update(self):#
        keys = key.get_pressed()#подключаем клавиатуру
        if keys[K_LEFT] and self.rect.x > 5:#даем показатели куда и как двигатся
            self.rect.x -= self.speed#
        if keys[K_RIGHT] and self.rect.x < 595:#
            self.rect.x += self.speed#
        if keys [K_UP] and self.rect.y > 5:#
            self.rect.y -= self.speed#
        if keys [K_DOWN] and self.rect.y < 395:#
            self.rect.y += self.speed#


class Enemy(GameSprite):
    direction = "left"
    def update(self):
        if self.rect.x <= 470:
            self.direction = "right"
        if self.rect.x >= win_width - 85:
            self.direction = "left"
        if self.direction == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed



class Enemy2(GameSprite):
    direction = "up"
    def update(self):
        if self.rect.y <= 90:
            self.direction = "down"
        if self.rect.y >= win_height - 80:
            self.direction = "up"
        if self.direction == "up":
            self.rect.y -= self.speed
        else:
            self.rect.y += self.speed



class Enemy3(GameSprite):
    direction = "left"
    def update(self):
        if self.rect.x <= 120:
            self.direction = "down" 
        if self.rect.x >= win_width - 80:
            self.direction = "up"
    def update(self):
        direction = "up"
        if self.rect.x >= win_width - 150:
            self.direction = "up"
        if self.rect.x >= win_width - 95:
            self.direction = "down"
        if self.direction == "down":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed

class Wall(sprite.Sprite):
    def __init__(self, r, g, b, wall_x, wall_y, wall_width, wall_height):
        self.r = r
        self.g = g
        self.b = b
        self.wall_x = wall_x
        self.wall_y = wall_y
        self.width = wall_width
        self.height = wall_height

        self.image = Surface([self.width, self.height]) 
        self.image.fill((r, g, b))
        self.rect = self.image.get_rect()
        self.rect.x = wall_x
        self.rect.y= wall_y

    def draw_wall(self):
        window.blit(self.image, (self.rect.x, self.rect.y))






win_width = 700#высота окна
win_height = 500#ширина окна
window = display.set_mode((win_width, win_height))#подключаем высоту и ширину
display.set_caption("Maze")#название 
background = transform.scale(image.load("background.jpg"), (win_width, win_height))#загружаем фото на задний план


w1 = Wall(160, 190, 0, 100, 20, 450, 10)
w2 = Wall(160, 190, 0, 100 ,480, 350, 10)
w3 = Wall(160, 190, 0, 100, 20, 10, 380)
w4 = Wall(160, 190, 0, 200, 100, 10, 400)
w5 = Wall(160, 190, 0, 200, 300, 10, 300)
w6 = Wall(160, 190, 0, 300, 30, 10, 350)
w7 = Wall(160, 190, 0, 400, 330, 10, 150)
w8 = Wall(160, 190, 0, 400, 330, 100, 10)
w9 = Wall(160, 190, 0, 489, 220, 10, 120)
w10 = Wall(160, 190, 0, 400, 220, 100, 10)
w11 = Wall(160, 190, 0, 400, 110, 10, 110)
player = Player("hero.png", 5, win_height -80, 4)#помещаем спрайты в игру
monster = Enemy("cyborg.png", win_width -80, 280, 2)#
final = GameSprite("treasure.png", win_width -120, win_height - 80, 0)#
monster2 = Enemy2("cyborg.png", win_width -400, win_height -400, 4)
monster3 = Enemy3("cyborg.png",  win_width -20, 300, 2)


font.init()
font = font.SysFont("Arial", 70)
win = font.render("YOU WINNER", True, (255, 215, 0))
lose = font.render("YOU LOSE", True, (180, 0, 0))


game = True#создаем цикл игры работет
finish = False
clock = time.Clock()#четчик фпс
FPS = 60#сколько фпс будет





while game:#создаем цикл игра
    for e in event.get():#проверяем на нажатую кнопку
        if e.type == QUIT:#если нажата кнопка выход
            game = False#то игра выключается 

    if finish != True:
        window.blit(background, (0, 0))
        player.update()
        monster.update()
        monster2.update()
        monster3.update()
        #устанвливаем координаты для картинки задний фон 
        player.reset()#подключаем 
        monster.reset()#
        monster2.reset()
        monster3.reset()
        
        final.reset()#
        w1.draw_wall()
        w2.draw_wall()
        w3.draw_wall()
        w4.draw_wall()
        w5.draw_wall()
        w6.draw_wall()
        w7.draw_wall()
        w8.draw_wall()
        w9.draw_wall()
        w10.draw_wall()
        w11.draw_wall()
        if sprite.collide_rect(player, monster) or sprite.collide_rect(player, monster2) or sprite.collide_rect(player, monster3) or sprite.collide_rect(player, w1) or sprite.collide_rect(player, w2) or sprite.collide_rect(player, w3) or sprite.collide_rect(player, w4) or sprite.collide_rect(player, w5) or sprite.collide_rect(player, w6) or sprite.collide_rect(player, w7) or sprite.collide_rect(player, w8) or sprite.collide_rect(player, w9) or sprite.collide_rect(player, w10):
            finish = True
            window.blit(lose, (200, 200))
            #kick.play
        if sprite.collide_rect(player, final):
            finish = True
            windows.blit(win, (200 ,200))
            #money.play()
    display.update()#обновление экрана
    clock.tick(FPS)#счетчик фпс
